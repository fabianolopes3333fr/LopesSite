# Generated by Django 5.1.6 on 2025-02-25 22:17

import apps.pages.models
import colorfield.fields
import django.db.models.deletion
import django_ckeditor_5.fields
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FieldGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=120, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem')),
                ('is_collapsible', models.BooleanField(default=True, verbose_name='Expansível/Retrátil')),
                ('is_collapsed', models.BooleanField(default=False, verbose_name='Iniciar retraído')),
            ],
            options={
                'verbose_name': 'Grupo de campos',
                'verbose_name_plural': 'Grupos de campos',
                'ordering': ['template', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FieldDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=120, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='Texto de ajuda')),
                ('field_type', models.CharField(choices=[('text', 'Texto curto'), ('textarea', 'Texto longo'), ('richtext', 'Editor rico (WYSIWYG)'), ('email', 'E-mail'), ('url', 'URL'), ('integer', 'Número inteiro'), ('decimal', 'Número decimal'), ('boolean', 'Checkbox (Sim/Não)'), ('date', 'Data'), ('time', 'Hora'), ('datetime', 'Data e Hora'), ('image', 'Imagem'), ('gallery', 'Galeria de imagens'), ('file', 'Arquivo'), ('video', 'Vídeo'), ('audio', 'Áudio'), ('map', 'Mapa'), ('color', 'Cor'), ('select', 'Lista de seleção'), ('multiselect', 'Lista de seleção múltipla'), ('radio', 'Botões de opção'), ('checkboxes', 'Lista de checkboxes'), ('json', 'Campo JSON'), ('code', 'Código fonte'), ('relation', 'Relação com outros objetos')], max_length=20, verbose_name='Tipo de campo')),
                ('default_value', models.TextField(blank=True, verbose_name='Valor padrão')),
                ('placeholder', models.CharField(blank=True, max_length=255, verbose_name='Placeholder')),
                ('is_required', models.BooleanField(default=False, verbose_name='Campo obrigatório')),
                ('min_length', models.IntegerField(blank=True, null=True, verbose_name='Comprimento mínimo')),
                ('max_length', models.IntegerField(blank=True, null=True, verbose_name='Comprimento máximo')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='Valor mínimo')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='Valor máximo')),
                ('options', models.TextField(blank=True, help_text='Para campos de seleção, opções separadas por vírgula ou em formato JSON', verbose_name='Opções')),
                ('validation_regex', models.CharField(blank=True, help_text='Expressão regular para validação personalizada', max_length=255, verbose_name='Expressão regular para validação')),
                ('allowed_extensions', models.CharField(blank=True, help_text='Para arquivos e imagens, extensões permitidas separadas por vírgula', max_length=255, verbose_name='Extensões permitidas')),
                ('max_file_size', models.IntegerField(blank=True, help_text='Para arquivos, imagens, vídeos, etc.', null=True, verbose_name='Tamanho máximo de arquivo (KB)')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem')),
                ('css_classes', models.CharField(blank=True, help_text='Classes CSS para customizar a aparência do campo', max_length=255, verbose_name='Classes CSS')),
                ('is_searchable', models.BooleanField(default=True, verbose_name='Pode ser usado em buscas')),
                ('is_filterable', models.BooleanField(default=False, verbose_name='Pode ser usado em filtros')),
                ('is_translatable', models.BooleanField(default=True, verbose_name='Pode ser traduzido')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='pages.fieldgroup', verbose_name='Grupo de campos')),
            ],
            options={
                'verbose_name': 'Definição de campo',
                'verbose_name_plural': 'Definições de campos',
                'ordering': ['group', 'order', 'name'],
                'unique_together': {('group', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='PageCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, help_text='Nome do ícone FontAwesome ou outro framework de ícones', max_length=50, verbose_name='Ícone')),
                ('color', colorfield.fields.ColorField(blank=True, default='#FFFFFF', image_field=None, max_length=25, samples=None, verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='pages.pagecategory', verbose_name='Categoria pai')),
            ],
            options={
                'verbose_name': 'Categoria de página',
                'verbose_name_plural': 'Categorias de páginas',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(max_length=250, unique=True, verbose_name='Slug')),
                ('content', django_ckeditor_5.fields.CKEditor5Field(blank=True, verbose_name='Conteúdo principal')),
                ('summary', models.TextField(blank=True, verbose_name='Resumo')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('review', 'Em revisão'), ('scheduled', 'Agendado'), ('published', 'Publicado'), ('archived', 'Arquivado')], default='draft', max_length=20, verbose_name='Status')),
                ('is_indexable', models.BooleanField(default=True, verbose_name='Indexável por motores de busca')),
                ('is_searchable', models.BooleanField(default=True, verbose_name='Aparece nas buscas internas')),
                ('is_visible_in_menu', models.BooleanField(default=True, verbose_name='Visível no menu')),
                ('visibility', models.CharField(choices=[('public', 'Público'), ('private', 'Privado'), ('password', 'Protegido por senha')], default='public', max_length=20, verbose_name='Visibilidade')),
                ('password', models.CharField(blank=True, help_text='Para páginas protegidas por senha', max_length=128, verbose_name='Senha')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de publicação')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Data agendada')),
                ('meta_title', models.CharField(blank=True, help_text='Título para SEO. Se vazio, usa o título da página', max_length=150, verbose_name='Título SEO')),
                ('meta_description', models.TextField(blank=True, help_text='Breve descrição para SEO (máx. 300 caracteres)', max_length=300, verbose_name='Descrição SEO')),
                ('meta_keywords', models.CharField(blank=True, help_text='Palavras-chave para SEO, separadas por vírgula', max_length=300, verbose_name='Palavras-chave')),
                ('og_title', models.CharField(blank=True, help_text='Título para compartilhamento em redes sociais', max_length=150, verbose_name='Título Open Graph')),
                ('og_description', models.TextField(blank=True, help_text='Descrição para compartilhamento em redes sociais', max_length=300, verbose_name='Descrição Open Graph')),
                ('og_image', models.ImageField(blank=True, help_text='Imagem para compartilhamento em redes sociais (1200x630 recomendado)', null=True, upload_to=apps.pages.models.page_image_path, verbose_name='Imagem Open Graph')),
                ('og_type', models.CharField(choices=[('website', 'Website'), ('article', 'Article'), ('blog', 'Blog'), ('product', 'Product')], default='website', max_length=50, verbose_name='Tipo Open Graph')),
                ('schema_type', models.CharField(choices=[('WebPage', 'WebPage'), ('Article', 'Article'), ('BlogPosting', 'BlogPosting'), ('Product', 'Product'), ('Event', 'Event'), ('Organization', 'Organization'), ('Person', 'Person'), ('LocalBusiness', 'LocalBusiness')], default='WebPage', max_length=50, verbose_name='Tipo Schema.org')),
                ('schema_data', models.TextField(blank=True, help_text='JSON adicional para Schema.org', validators=[apps.pages.models.validate_json], verbose_name='Dados Schema.org')),
                ('permalink', models.CharField(blank=True, help_text='URL personalizada para esta página. Se vazio, usa o slug', max_length=255, verbose_name='URL permanente')),
                ('redirect_to', models.CharField(blank=True, help_text='Se preenchido, redirecionará para esta URL', max_length=255, verbose_name='Redirecionar para')),
                ('redirect_type', models.IntegerField(choices=[(301, 'Permanente (301)'), (302, 'Temporário (302)')], default=302, verbose_name='Tipo de redirecionamento')),
                ('enable_comments', models.BooleanField(default=True, verbose_name='Habilitar comentários')),
                ('enable_analytics', models.BooleanField(default=True, verbose_name='Habilitar analytics')),
                ('cache_ttl', models.IntegerField(default=3600, help_text='Tempo para expiração do cache desta página', verbose_name='Tempo de cache (segundos)')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_pages_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='pages.page', verbose_name='Página pai')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pages_published', to=settings.AUTH_USER_MODEL, verbose_name='Publicado por')),
                ('sites', models.ManyToManyField(blank=True, related_name='pages', to='sites.site', verbose_name='Sites')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_pages_updated', to=settings.AUTH_USER_MODEL, verbose_name='Atualizado por')),
                ('categories', models.ManyToManyField(blank=True, related_name='pages', to='pages.pagecategory', verbose_name='Categorias')),
            ],
            options={
                'verbose_name': 'Página',
                'verbose_name_plural': 'Páginas',
                'ordering': ['order', 'title'],
                'permissions': [('publish_page', 'Pode publicar páginas'), ('archive_page', 'Pode arquivar páginas'), ('review_page', 'Pode revisar páginas')],
            },
        ),
        migrations.CreateModel(
            name='PageComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='Nome do autor')),
                ('author_email', models.EmailField(max_length=254, verbose_name='E-mail do autor')),
                ('author_url', models.URLField(blank=True, verbose_name='Website do autor')),
                ('comment', models.TextField(verbose_name='Comentário')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Aprovado')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='Curtidas')),
                ('dislikes', models.PositiveIntegerField(default=0, verbose_name='Não curtidas')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='Destacado')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='pages.page', verbose_name='Página')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='pages.pagecomment', verbose_name='Comentário pai')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_comments', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Comentário',
                'verbose_name_plural': 'Comentários',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='galleries_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleries', to='pages.page', verbose_name='Página')),
            ],
            options={
                'verbose_name': 'Galeria',
                'verbose_name_plural': 'Galerias',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=apps.pages.models.page_image_path, verbose_name='Imagem')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Título')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='Texto alternativo')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de adição')),
                ('width', models.IntegerField(blank=True, null=True, verbose_name='Largura')),
                ('height', models.IntegerField(blank=True, null=True, verbose_name='Altura')),
                ('file_size', models.IntegerField(blank=True, null=True, verbose_name='Tamanho do arquivo (KB)')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='pages.pagegallery', verbose_name='Galeria')),
            ],
            options={
                'verbose_name': 'Imagem',
                'verbose_name_plural': 'Imagens',
                'ordering': ['gallery', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PageNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('page_created', 'Página criada'), ('page_updated', 'Página atualizada'), ('page_published', 'Página publicada'), ('page_archived', 'Página arquivada'), ('page_deleted', 'Página excluída'), ('revision_requested', 'Revisão solicitada'), ('revision_approved', 'Revisão aprovada'), ('revision_rejected', 'Revisão rejeitada'), ('comment_added', 'Comentário adicionado')], max_length=30, verbose_name='Tipo de notificação')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lida')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de leitura')),
                ('extra_data', models.JSONField(blank=True, null=True, verbose_name='Dados adicionais')),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_actions', to=settings.AUTH_USER_MODEL, verbose_name='Ator')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='pages.page', verbose_name='Página')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageRedirect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_path', models.CharField(help_text='Caminho da URL antiga (ex: /antiga-url/)', max_length=255, unique=True, verbose_name='Caminho antigo')),
                ('redirect_type', models.IntegerField(choices=[(301, 'Permanente (301)'), (302, 'Temporário (302)')], default=301, verbose_name='Tipo de redirecionamento')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('access_count', models.PositiveIntegerField(default=0, verbose_name='Contador de acessos')),
                ('last_accessed', models.DateTimeField(blank=True, null=True, verbose_name='Último acesso')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redirects_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redirects', to='pages.page', verbose_name='Página de destino')),
            ],
            options={
                'verbose_name': 'Redirecionamento',
                'verbose_name_plural': 'Redirecionamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('slug', models.SlugField(max_length=120, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('layout', models.CharField(choices=[('default', 'Padrão'), ('full_width', 'Largura Total'), ('sidebar_left', 'Barra Lateral Esquerda'), ('sidebar_right', 'Barra Lateral Direita'), ('landing', 'Landing Page'), ('dashboard', 'Dashboard')], default='default', max_length=30, verbose_name='Layout')),
                ('template_file', models.CharField(help_text='Caminho relativo para o arquivo de template', max_length=200, verbose_name='Arquivo de template')),
                ('preview_image', models.ImageField(blank=True, null=True, upload_to='templates/previews/', verbose_name='Imagem de prévia')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templates_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Template de página',
                'verbose_name_plural': 'Templates de página',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='page',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='pages.pagetemplate', verbose_name='Template'),
        ),
        migrations.AddField(
            model_name='fieldgroup',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_groups', to='pages.pagetemplate', verbose_name='Template'),
        ),
        migrations.CreateModel(
            name='PageVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('content', models.TextField(blank=True, verbose_name='Conteúdo')),
                ('summary', models.TextField(blank=True, verbose_name='Resumo')),
                ('version_number', models.IntegerField(verbose_name='Número da versão')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('comment', models.TextField(blank=True, verbose_name='Comentário da versão')),
                ('custom_fields', models.JSONField(blank=True, null=True, verbose_name='Campos personalizados')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('review', 'Em revisão'), ('scheduled', 'Agendado'), ('published', 'Publicado'), ('archived', 'Arquivado')], max_length=20, verbose_name='Status')),
                ('meta_title', models.CharField(blank=True, max_length=150, verbose_name='Título SEO')),
                ('meta_description', models.TextField(blank=True, max_length=300, verbose_name='Descrição SEO')),
                ('meta_keywords', models.CharField(blank=True, max_length=300, verbose_name='Palavras-chave')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_versions', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='pages.page', verbose_name='Página')),
            ],
            options={
                'verbose_name': 'Versão de página',
                'verbose_name_plural': 'Versões de páginas',
                'ordering': ['-version_number'],
                'unique_together': {('page', 'version_number')},
            },
        ),
        migrations.CreateModel(
            name='PageRevisionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, verbose_name='Comentário')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('in_progress', 'Em análise'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado')], default='pending', max_length=20, verbose_name='Status')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Data da solicitação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última atualização')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de conclusão')),
                ('reviewer_comment', models.TextField(blank=True, verbose_name='Comentário do revisor')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_requests', to='pages.page', verbose_name='Página')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_requests_created', to=settings.AUTH_USER_MODEL, verbose_name='Solicitado por')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revisions_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Revisor')),
                ('version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision_requests', to='pages.pageversion', verbose_name='Versão')),
            ],
            options={
                'verbose_name': 'Solicitação de revisão',
                'verbose_name_plural': 'Solicitações de revisão',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PageFieldValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, verbose_name='Valor')),
                ('file', models.FileField(blank=True, null=True, upload_to=apps.pages.models.page_file_path, verbose_name='Arquivo')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_values', to='pages.fielddefinition', verbose_name='Campo')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_values', to='pages.page', verbose_name='Página')),
            ],
            options={
                'verbose_name': 'Valor de campo personalizado',
                'verbose_name_plural': 'Valores de campos personalizados',
                'unique_together': {('page', 'field')},
            },
        ),
        migrations.CreateModel(
            name='PageMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='Chave')),
                ('value', models.TextField(blank=True, verbose_name='Valor')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meta_items', to='pages.page', verbose_name='Página')),
            ],
            options={
                'verbose_name': 'Metadado',
                'verbose_name_plural': 'Metadados',
                'unique_together': {('page', 'key')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='fieldgroup',
            unique_together={('template', 'slug')},
        ),
    ]
